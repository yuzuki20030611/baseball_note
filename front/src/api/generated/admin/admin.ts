// /**
//  * Generated by orval v7.1.0 üç∫
//  * Do not edit manually.
//  * aiUnit
//  * Apps link<br>/docs<br><a href='/admin/docs'>/admin/docs</a>
//  * OpenAPI spec version: 0.0.1
//  */
// import useSwr from 'swr'
// import type { Key, SWRConfiguration } from 'swr'
// import type { GetAdminHoge200 } from '../../model'
// import { nextFetch } from '../../nextFetch'
// import type { ErrorType } from '../../nextFetch'

// type SecondParameter<T extends (...args: any) => any> = Parameters<T>[1]

// /**
//  * @summary Get Admin Hoge
//  */
// export const getAdminHoge = (options?: SecondParameter<typeof nextFetch>) => {
//   return nextFetch<GetAdminHoge200>({ url: `/admin/hoge`, method: 'GET' }, options)
// }

// export const getGetAdminHogeKey = () => [`/admin/hoge`] as const

// export type GetAdminHogeQueryResult = NonNullable<Awaited<ReturnType<typeof getAdminHoge>>>
// export type GetAdminHogeQueryError = ErrorType<unknown>

// /**
//  * @summary Get Admin Hoge
//  */
// export const useGetAdminHoge = <TError = ErrorType<unknown>>(options?: {
//   swr?: SWRConfiguration<Awaited<ReturnType<typeof getAdminHoge>>, TError> & { swrKey?: Key; enabled?: boolean }
//   request?: SecondParameter<typeof nextFetch>
// }) => {
//   const { swr: swrOptions, request: requestOptions } = options ?? {}

//   const isEnabled = swrOptions?.enabled !== false
//   const swrKey = swrOptions?.swrKey ?? (() => (isEnabled ? getGetAdminHogeKey() : null))
//   const swrFn = () => getAdminHoge(requestOptions)

//   const query = useSwr<Awaited<ReturnType<typeof swrFn>>, TError>(swrKey, swrFn, swrOptions)

//   return {
//     swrKey,
//     ...query,
//   }
// }
