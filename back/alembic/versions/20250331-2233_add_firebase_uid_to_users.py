"""add_firebase_uid_to_users

Revision ID: fefe1dbc2e25
Revises: 556b7357afbd
Create Date: 2025-03-31 22:33:54.808709

"""

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = "fefe1dbc2e25"
down_revision = "556b7357afbd"
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_unique_constraint(None, "comments", ["id"])
    op.create_unique_constraint(None, "notes", ["id"])
    op.create_unique_constraint(None, "profiles", ["id"])
    op.create_unique_constraint(None, "training_notes", ["id"])
    op.create_unique_constraint(None, "trainings", ["id"])
    op.add_column(
        "users", sa.Column("firebase_uid", sa.String(length=128), nullable=False)
    )
    op.create_unique_constraint(None, "users", ["id"])
    op.create_unique_constraint(None, "users", ["firebase_uid"])
    op.drop_column("users", "password")
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column(
        "users",
        sa.Column(
            "password", sa.VARCHAR(length=255), autoincrement=False, nullable=False
        ),
    )
    op.drop_constraint(None, "users", type_="unique")
    op.drop_constraint(None, "users", type_="unique")
    op.drop_column("users", "firebase_uid")
    op.drop_constraint(None, "trainings", type_="unique")
    op.drop_constraint(None, "training_notes", type_="unique")
    op.drop_constraint(None, "profiles", type_="unique")
    op.drop_constraint(None, "notes", type_="unique")
    op.drop_constraint(None, "comments", type_="unique")
    # ### end Alembic commands ###
